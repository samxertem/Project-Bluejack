
        		int computerBoardCard = 0;
        int playerBoardCard = 0; // Initialize playerBoardCard
        Card[] playerBoard = new Card[9];
        Card[] computerBoard = new Card[9];
        int sumComputerBoard= 0;
        int sumPlayerBoard = 0;
        int select1 = 0; 
		int computerscore=0;
		int playerscore=0;
        boolean playersturn = false;
		int gameDeckIndex=0;
		
		
		while(playerscore<=3 && computerscore<=3){
			while(!playersturn){
				
			System.out.println("--------------------------------");
            System.out.println("Select your move!");
            System.out.println("1. Draw   2. Stand 3. Choose From Your Deck 4. End Turn");

            select1 = sc.nextInt();
			
			if (select1 == 1 && playerBoardCard < 9) {
               
				playerBoard[playerBoardCard]=gameDeck[gameDeckIndex];
				gameDeckIndex++;
				playerBoardCard++;
				
				
					System.out.println("PLAYERHAND: " + Arrays.toString(playerHand));
                    System.out.println("PLAYERBOARD: " + Arrays.toString(Arrays.copyOf(playerBoard, playerBoardCard)));
                    System.out.println("COMPUTERBOARD: " + Arrays.toString(Arrays.copyOf(computerBoard, computerBoardCard)));
                    System.out.println("COMPUTERHAND: X X X X ");
					
			}else if(select1==3 && playerBoardCard<9){
				System.out.println("Choose which card you want to play from your deck");
				int chooserfromdeck = sc.nextInt();
				
                    if (playerHand[chooserfromdeck - 1].getValue().equals("Doubler")) {
                        playerBoard[playerBoardCard] = playerHand[chooserfromdeck - 1];
                        playerBoardCard++;

                        if (playerBoardCard > 1 && playerBoard[playerBoardCard - 2] != null) {
                            int previousValue = Integer.parseInt(playerBoard[playerBoardCard - 2].getValue());
                            int newValue = 2 * previousValue;
                            playerBoard[playerBoardCard - 1] = new Card(String.valueOf(newValue), playerBoard[playerBoardCard - 2].getColor());
                        }

                    } else if (playerHand[chooserfromdeck - 1].getValue().equals("+/-")) {
                        playerBoard[playerBoardCard] = playerHand[chooserfromdeck - 1];
                        playerBoardCard++;
                        if (playerBoardCard > 1 && playerBoard[playerBoardCard - 2] != null) {
                            int previousValue2 = Integer.parseInt(playerBoard[playerBoardCard - 2].getValue());
                            int newValue2 = previousValue2 * -1;
                            playerBoard[playerBoardCard - 1] = new Card(String.valueOf(newValue2), playerBoard[playerBoardCard - 2].getColor());
                        }
	

                    } else if (chooserfromdeck >= 1 && chooserfromdeck <= 4) {
                        playerBoard[playerBoardCard] = playerHand[chooserfromdeck - 1];
                        playerBoardCard++;
                    } else {
                        System.out.println("Invalid choice. Please choose a number between 1 and 4.");
                        playersturn = true;
                        continue;
                    }
					
					System.out.println("PLAYERHAND: " + Arrays.toString(playerHand));
                    System.out.println("PLAYERBOARD: " + Arrays.toString(Arrays.copyOf(playerBoard, playerBoardCard)));
                    System.out.println("COMPUTERBOARD: " + Arrays.toString(Arrays.copyOf(computerBoard, computerBoardCard)));
                    System.out.println("COMPUTERHAND: X X X X ");
					
			}else if(select1==4){
				playersturn=true;
			}else if(select1==2){
				playersturn=true;
				}
			}
				if (sumComputerBoard <= 15 && sumComputerBoard >= 0) {
				computerBoard[computerBoardCard] = gameDeck[gameDeckIndex];
				gameDeckIndex++;
				computerBoardCard++;
				sumComputerBoard = sumCardValues(computerBoard);
				} else {
						playersturn=true;

            break; 
			}
		
		

            
					System.out.println("PLAYERHAND: " + Arrays.toString(playerHand));
                    System.out.println("PLAYERBOARD: " + Arrays.toString(Arrays.copyOf(playerBoard, playerBoardCard)));
                    System.out.println("COMPUTERBOARD: " + Arrays.toString(Arrays.copyOf(computerBoard, computerBoardCard)));
                    System.out.println("COMPUTERHAND: X X X X ");

			
          
        
		            sumPlayerBoard = sumCardValues(playerBoard);
					sumComputerBoard= sumCardValues(computerBoard);
		  if(sumPlayerBoard<=20 && sumComputerBoard<=20 && sumPlayerBoard>sumComputerBoard){
				playerscore++;
				System.out.println(" Player Wins: " + playerscore+ "-" + computerscore);
			}else if(sumPlayerBoard<=20 && sumComputerBoard<=20 && sumPlayerBoard<sumComputerBoard){
				computerscore++;
				System.out.println(" Computer Wins: " + playerscore + "-" +computerscore);
			}else if(sumPlayerBoard==sumComputerBoard){
				System.out.println(" It's Tie ");
			}
		}
	}
}

		
			
		
                    
					
